@startuml

skin rose

title Classes - Crafting System - Inventory System

namespace CraftingSystem {
	class CraftingManager {
	  - int gridSize
	
	  + Recipe CheckMatchingRecipe()
	  + bool Craft(Item[,])
	}
  
	class RecipeBook {
	  + List<Recipe> unlockedRecipes
	  
	  + List<Recipe> GetUnlockedRecipes()
	}
  
	class Recipe {
	  - bool shapeless
	  - int gridSizeRequired
	  - Item[,] requiredItemGrid
	  
	  + Item[,] GetRequiredItemGrid()
	  + bool CheckMatchingRecipe(Item[,])
	}
  
	class Item{}

	RecipeBook "1" -> "0..*" Recipe : Holds
	Recipe "0..*" -> "1..* "Item : Requires
	CraftingManager "1" -> "1" Recipe : Creates
	CraftingManager "1" -> "1" RecipeBook : Looks into
}

namespace InventorySystem {
	class Inventory {
	  - List<InventorySlot> slots

	  + Inventory(int maxSlots)
	  + bool AddItem(InventoryItem item)
	  + bool RemoveItem(InventoryItem item)
	  - void Initialize(int maxSlots)
	}
	
	class InventorySlot {
	  - InventoryItem item
	  - int count
	  
	  + bool Initialize(InventoryItem item)
	  + InventoryItem GetItem()
	  + int GetCount()
	  + int Add()
	  + int Remove()
	}
	
	struct InventoryItem {
	  + string Name
	  + Sprite Sprite
	  + GameObject ItemPrefab
	  
	  + InventoryItem(string name, Sprite sprite, GameObject itemPrefab)
	}
	
	Inventory "1" *-- "1..*" InventorySlot : Stores
	InventorySlot "1..*" *-- "0..*" InventoryItem : Stores
}

@enduml